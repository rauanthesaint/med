/*
   CSS for the UI Button component.

   Base styling for the button element.
*/
.Button {
    width: 100%;
    outline: none;
    border: none;
    border-radius: 8px;
    font-family: var(--ff);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

/*
   Styles based on different button types (primary, secondary, tertiary).
   - 'primary' has a specific background color and text color.
   - 'secondary' has a different background color and text color.
   - 'tertiary' is transparent with a specific text color.
*/
.Button {
    transition: opacity 100ms linear, transform 100ms ease-out;
    &.primary {
        background-color: var(--pr);
        color: var(--bg);
        opacity: 1;
    }
    &.secondary {
        background-color: var(--fg);
        color: var(--bg);
        opacity: 1;
    }
    &.tertiary {
        background-color: transparent;
        color: var(--fg);
        opacity: 1;
    }
}

/*
   Styles based on different button sizes (small, medium, large).
   Each size has specific font size, padding, and optional SVG styling.
*/
.Button {
    &.sm {
        font-size: 1rem;
        padding: 8px 12px;
        svg {
            $size: 1rem;
            min-width: $size;
            width: 100%;
            max-width: $size;
            height: $size;
        }
    }
    &.md {
        font-size: 1.25rem;
        padding: 14px 16px;
        svg {
            $size: 1.25rem;
            min-width: $size;
            width: 100%;
            max-width: $size;
            height: $size;
        }
    }
    &.lg {
        font-size: 1.5rem;
        padding: 14px 16px;
        svg {
            $size: 1.5rem;
            min-width: $size;
            width: 100%;
            max-width: $size;
            height: $size;
        }
    }
}

/*
   Additional styling for different states of the UI Button component.

   Styling for the disabled state:
   - Changes background color and text color when the button is disabled.
*/
.Button {
    &:disabled {
        background-color: var(--fg-200);
        color: var(--fg-100);
        cursor: not-allowed;
        &:hover {
            &.primary,
            &.secondary,
            &.tertiary {
                opacity: 1;
            }
        }
        &:active {
            &.primary,
            &.secondary,
            &.tertiary {
                transform: none;
            }
        }
    }

    /*
       Hover state styling:
       - Reduces opacity for a visual feedback effect on hover.
    */
    &:hover {
        &.primary,
        &.secondary,
        &.tertiary {
            opacity: 0.8;
        }
    }

    /*
       Active state styling:
       - Slightly scales down the button on click for a pressing effect.
    */
    &:active {
        &.primary,
        &.secondary,
        &.tertiary {
            transform: scale(0.99);
        }
    }

    /*
       Focus state styling:
       - Adds an outline with a specific color and offset for accessibility.
    */
    &:focus {
        &.primary,
        &.secondary,
        &.tertiary {
            outline: 2px solid var(--pr);
            outline-offset: 2px;
        }
    }
}
